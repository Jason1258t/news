// scripts/run-init.js
import { 
  initArticles, 
  forceInitArticles, 
  forceInitSingleArticle,
  listAvailableArticles 
} from './init-articles.js';

// –ü–æ–ª—É—á–∞–µ–º –∞—Ä–≥—É–º–µ–Ω—Ç—ã –∫–æ–º–∞–Ω–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–∏
const args = process.argv.slice(2);
const force = args.includes('--force') || args.includes('-f');
const single = args.find(arg => arg.startsWith('--article=')) || args.find(arg => arg.startsWith('-a='));
const list = args.includes('--list') || args.includes('-l');
const help = args.includes('--help') || args.includes('-h');

function showHelp() {
  console.log(`
üöÄ –ò–ù–ò–¶–ò–ê–õ–ò–ó–ê–¢–û–† –°–¢–ê–¢–ï–ô

–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ:
  npm run init:articles [–æ–ø—Ü–∏–∏]

–û–ø—Ü–∏–∏:
  --help, -h          –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
  --list, -l          –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Å—Ç–∞—Ç–µ–π
  --force, -f         –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –ø–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –í–°–ï —Å—Ç–∞—Ç—å–∏
  --article=<id>, -a=<id>  –ü—Ä–∏–Ω—É–¥–∏—Ç–µ–ª—å–Ω–æ –∑–∞–≥—Ä—É–∑–∏—Ç—å –æ–¥–Ω—É —Å—Ç–∞—Ç—å—é

–ü—Ä–∏–º–µ—Ä—ã:
  npm run init:articles                    # –û–±—ã—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
  npm run init:articles --force            # –ü–µ—Ä–µ–∑–∞–ø–∏—Å–∞—Ç—å –≤—Å–µ —Å—Ç–∞—Ç—å–∏
  npm run init:articles --article=ai-warning # –ó–∞–≥—Ä—É–∑–∏—Ç—å –æ–¥–Ω—É —Å—Ç–∞—Ç—å—é
  npm run init:articles --list             # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ —Å—Ç–∞—Ç–µ–π
  `);
}

async function main() {
  if (help) {
    showHelp();
    return;
  }

  if (list) {
    listAvailableArticles();
    return;
  }

  console.log('üöÄ –ó–∞–ø—É—Å–∫ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —Å—Ç–∞—Ç–µ–π...\n');
  
  if (single) {
    // –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –æ–¥–Ω–æ–π —Å—Ç–∞—Ç—å–∏
    const articleId = single.split('=')[1];
    if (!articleId) {
      console.error('‚ùå –£–∫–∞–∂–∏—Ç–µ ID —Å—Ç–∞—Ç—å–∏: --article=<id> –∏–ª–∏ -a=<id>');
      process.exit(1);
    }
    await forceInitSingleArticle(articleId);
  } else if (force) {
    // –§–æ—Ä—Å–∏—Ä–æ–≤–∞–Ω–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –≤—Å–µ—Ö —Å—Ç–∞—Ç–µ–π
    await forceInitArticles();
  } else {
    // –û–±—ã—á–Ω–∞—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ —Å—Ç–∞—Ç–µ–π –Ω–µ—Ç)
    await initArticles();
  }
  
  console.log('\n‚úÖ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞');
  process.exit(0);
}

main().catch(error => {
  console.error('üí• –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ:', error);
  process.exit(1);
});